"""metric-tables

Revision ID: dadc7c118e68
Revises: ea2aa1134cb3
Create Date: 2024-12-04 17:04:17.898589

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "dadc7c118e68"
down_revision: Union[str, None] = "ea2aa1134cb3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "provider",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("version", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("slug"),
    )
    op.create_table(
        "metric",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("version", sa.String(), nullable=False),
        sa.Column("provider_id", sa.Integer(), nullable=False),
        sa.Column("enabled", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.ForeignKeyConstraint(
            ["provider_id"],
            ["provider.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("slug"),
    )
    op.create_table(
        "metric_execution",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("retracted", sa.Boolean(), nullable=False),
        sa.Column("metric_id", sa.Integer(), nullable=False),
        sa.Column("key", sa.String(), nullable=False),
        sa.Column("dirty", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.ForeignKeyConstraint(
            ["metric_id"],
            ["metric.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("metric_execution", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_metric_execution_key"), ["key"], unique=False)

    op.create_table(
        "metric_execution_result",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("metric_execution_id", sa.Integer(), nullable=False),
        sa.Column("dataset_hash", sa.String(), nullable=False),
        sa.Column("successful", sa.Boolean(), nullable=True),
        sa.Column("path", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.ForeignKeyConstraint(
            ["metric_execution_id"],
            ["metric_execution.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("metric_execution_result", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_metric_execution_result_dataset_hash"), ["dataset_hash"], unique=True
        )

    op.create_table(
        "metric_execution_result_dataset",
        sa.Column("metric_execution_result_id", sa.Integer(), nullable=True),
        sa.Column("dataset_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["dataset.id"],
        ),
        sa.ForeignKeyConstraint(
            ["metric_execution_result_id"],
            ["metric_execution_result.id"],
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("metric_execution_result_dataset")
    with op.batch_alter_table("metric_execution_result", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_metric_execution_result_dataset_hash"))

    op.drop_table("metric_execution_result")
    with op.batch_alter_table("metric_execution", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_metric_execution_key"))

    op.drop_table("metric_execution")
    op.drop_table("metric")
    op.drop_table("provider")
    # ### end Alembic commands ###
